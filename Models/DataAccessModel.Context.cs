//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVC_Entity_CRUD.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MVCEntityCRUD_dbEntities : DbContext
    {
        public MVCEntityCRUD_dbEntities()
            : base("name=MVCEntityCRUD_dbEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<City> Cities { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<Hobby> Hobbies { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<State> States { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<UserHobby> UserHobbies { get; set; }
        public virtual DbSet<UserProduct> UserProducts { get; set; }
    
        public virtual ObjectResult<Test_Result> Test()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Test_Result>("Test");
        }
    
        public virtual ObjectResult<User> SP_GetUserList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<User>("SP_GetUserList");
        }
    
        public virtual ObjectResult<User> SP_GetUserList(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<User>("SP_GetUserList", mergeOption);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_InsertUser(string firstname, string lastname, Nullable<System.DateTime> dateofbirth, string profilepicture, Nullable<decimal> age, Nullable<decimal> gender, Nullable<int> cityId, string address, Nullable<decimal> phoneno, ObjectParameter userId)
        {
            var firstnameParameter = firstname != null ?
                new ObjectParameter("Firstname", firstname) :
                new ObjectParameter("Firstname", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("Lastname", lastname) :
                new ObjectParameter("Lastname", typeof(string));
    
            var dateofbirthParameter = dateofbirth.HasValue ?
                new ObjectParameter("Dateofbirth", dateofbirth) :
                new ObjectParameter("Dateofbirth", typeof(System.DateTime));
    
            var profilepictureParameter = profilepicture != null ?
                new ObjectParameter("Profilepicture", profilepicture) :
                new ObjectParameter("Profilepicture", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(decimal));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(decimal));
    
            var cityIdParameter = cityId.HasValue ?
                new ObjectParameter("CityId", cityId) :
                new ObjectParameter("CityId", typeof(int));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var phonenoParameter = phoneno.HasValue ?
                new ObjectParameter("Phoneno", phoneno) :
                new ObjectParameter("Phoneno", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_InsertUser", firstnameParameter, lastnameParameter, dateofbirthParameter, profilepictureParameter, ageParameter, genderParameter, cityIdParameter, addressParameter, phonenoParameter, userId);
        }
    
        public virtual int SP_InsertHobbies(Nullable<int> userId, Nullable<int> hobbyId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var hobbyIdParameter = hobbyId.HasValue ?
                new ObjectParameter("HobbyId", hobbyId) :
                new ObjectParameter("HobbyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_InsertHobbies", userIdParameter, hobbyIdParameter);
        }
    
        public virtual int SP_InsertProducts(Nullable<int> userId, Nullable<int> productId, string recievername)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var recievernameParameter = recievername != null ?
                new ObjectParameter("Recievername", recievername) :
                new ObjectParameter("Recievername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_InsertProducts", userIdParameter, productIdParameter, recievernameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_InsertUpdateUser(Nullable<int> userId, string firstname, string lastname, Nullable<System.DateTime> dateofbirth, string profilepicture, Nullable<decimal> age, Nullable<decimal> gender, Nullable<int> cityId, string address, Nullable<decimal> phoneno, ObjectParameter userScalarId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var firstnameParameter = firstname != null ?
                new ObjectParameter("Firstname", firstname) :
                new ObjectParameter("Firstname", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("Lastname", lastname) :
                new ObjectParameter("Lastname", typeof(string));
    
            var dateofbirthParameter = dateofbirth.HasValue ?
                new ObjectParameter("Dateofbirth", dateofbirth) :
                new ObjectParameter("Dateofbirth", typeof(System.DateTime));
    
            var profilepictureParameter = profilepicture != null ?
                new ObjectParameter("Profilepicture", profilepicture) :
                new ObjectParameter("Profilepicture", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(decimal));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(decimal));
    
            var cityIdParameter = cityId.HasValue ?
                new ObjectParameter("CityId", cityId) :
                new ObjectParameter("CityId", typeof(int));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var phonenoParameter = phoneno.HasValue ?
                new ObjectParameter("Phoneno", phoneno) :
                new ObjectParameter("Phoneno", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_InsertUpdateUser", userIdParameter, firstnameParameter, lastnameParameter, dateofbirthParameter, profilepictureParameter, ageParameter, genderParameter, cityIdParameter, addressParameter, phonenoParameter, userScalarId);
        }
    
        public virtual int SP_DeleteUser(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DeleteUser", userIdParameter);
        }
    }
}
